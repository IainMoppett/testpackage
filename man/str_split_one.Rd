% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_split_one.R
\name{str_split_one}
\alias{str_split_one}
\title{Split a string}
\usage{
str_split_one(string, pattern, n = Inf)
}
\arguments{
\item{string}{A character vector with, at most, one element.}

\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:stringi-search-regex]{stringi::stringi-search-regex}. Control options with
\code{\link[stringr:regex]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[stringr:fixed]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[stringr:coll]{coll()}} which
respects character matching rules for the specified locale.

Match character, word, line and sentence boundaries with
\code{\link[stringr:boundary]{boundary()}}. An empty pattern, "", is equivalent to
\code{boundary("character")}.}

\item{n}{number of pieces to return.  Default (Inf) uses all
possible split positions.

For \code{str_split_fixed}, if n is greater than the number of pieces,
the result will be padded with empty strings.}
}
\value{
A character vector.
}
\description{
Split a string
}
\examples{
x <- "alfa,bravo,charlie,delta"
str_split_one(x, pattern = ",")
str_split_one(x, pattern = ",", n = 2)

y <- "192.168.0.1"
str_split_one(y, pattern = stringr::fixed("."))
}
